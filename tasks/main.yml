---

- name: Install [kubernetes] Ansible module requirements using system package manager
  become: true
  ansible.builtin.package:
    name: python3-kubernetes
    state: present

- name: Unprivileged tasks
  become: false
  block:

    - name: Download flux x64
      when: ansible_facts.architecture == "x86_64"
      ansible.builtin.get_url:
        url: https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_linux_amd64.tar.gz
        checksum: sha256:https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_checksums.txt
        dest: "/tmp/flux_linux.tar.gz"
        mode: "0644"

    - name: Download flux arm64
      when:
        - ( ansible_facts.architecture is search("arm") and
            ansible_facts.userspace_bits == "64" ) or
          ansible_facts.architecture is search("aarch64")
      ansible.builtin.get_url:
        url: https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_linux_arm64.tar.gz
        checksum: sha256:https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_checksums.txt
        dest: "/tmp/flux_linux.tar.gz"
        mode: "0644"

    - name: Download flux armhf
      when:
        - ansible_facts.architecture is search("arm")
        - ansible_facts.userspace_bits == "32"
      ansible.builtin.get_url:
        url: https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_linux_arm.tar.gz
        checksum: sha256:https://github.com/fluxcd/flux2/releases/download/v{{ flux_version | mandatory }}/flux_{{ flux_version | mandatory }}_checksums.txt
        dest: "/tmp/flux_linux.tar.gz"
        mode: "0644"

    - name: Create flux namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ flux_namespace }}"
        state: present

    - name: Apply secret manifest in flux namespace
      kubernetes.core.k8s:
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: sops-age
            namespace: "{{ flux_namespace }}"
          type: Opaque
          stringData:
            age.agekey: |
              {{ age_key | mandatory }}
        state: present
        apply: true

    - name: Create temporary directory for operations
      ansible.builtin.tempfile:
        state: directory
        suffix: -flux
      register: tempdir_1

    - name: Unarchive flux binary to temporary directory
      ansible.builtin.unarchive:
        src: "/tmp/flux_linux.tar.gz"
        dest: "{{ tempdir_1.path }}"
        remote_src: true
        mode: "0755"

    - name: Template SSH private key to temporary directory
      ansible.builtin.copy:
        content: |
          # SSH private key
          {{ flux_ssh | mandatory }}
        dest: "{{ tempdir_1.path }}/ssh_key"
        mode: "0600"

    - name: Clean previous runs of flux-init 1
      ansible.legacy.systemd:
        name: flux-init
        state: stopped
        scope: user
      failed_when: false

    - name: Clean previous runs of flux-init 2
      ansible.legacy.command: systemctl --user reset-failed flux-init
      failed_when: false
      changed_when: false

    - name: Bootstrap flux inside the transient flux-init service
      ansible.legacy.command:
        cmd: >
          systemd-run
            --user
            --service-type=oneshot
            --unit=flux-init
            --working-directory={{ tempdir_1.path }}
            {{ tempdir_1.path }}/flux
              bootstrap
              git
              --url="{{ flux_repository | mandatory }}"
              --branch "{{ flux_branch }}"
              --path="{{ flux_path | mandatory }}"
              --private-key-file="{{ tempdir_1.path }}/ssh_key"
              --namespace "{{ flux_namespace }}"
              --author-email "{{ flux_email | mandatory }}"
              --components-extra=image-reflector-controller,image-automation-controller
              --silent
      changed_when: false

    - name: Remove temporary directory for operations
      ansible.builtin.file:
        path: "{{ tempdir_1.path }}"
        state: absent
